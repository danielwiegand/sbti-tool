install.packages("ggiraph")
q95 <- 2.5
q5 <- 0.8
sigma <- (q95-q5) / (2 * qnorm(0.95))
mu = q95 - sigma * qnorm(0.95)
q66 <- mu + sigma * qnorm(0.66)
q66
q67
?qnorm
install.packages("esquisse")
esquisse:::esquisser()
install.packages("questionr")
questionr:::irec()
data(iris)
data(stats)
iris
questionr:::irec()
questionr:::irec()
str(iris)
questionr:::irec()
questionr:::irec()
questionr:::iorder()
questionr:::irec()
questionr:::irec()
questionr:::iorder()
install.packages("remedy")
remove.packages("remedy")
install.packages('addinslist')
library(tidyverse)
library("nleqslv")
install.packages("nleqslv")
data.frame(emission = 2800, t = 0:32, reduction = 2800*0.016)
# logarithmic time factor
fun <- function(x){
dat <- data.frame(emission = 2800, t = 0:32, reduction = 2800*0.016)
for(i in 2:33){
dat$reduction[i] <- dat$reduction[i-1]-log(dat$t[i])*x[1] -x[2]
}
dat$emission = dat$emission- cumsum(dat$reduction)
ret <- numeric(2)
ret[1] <- dat$emission[33]
ret[2] <- sum(dat$emission) - 43000
return(ret)
}
# opt_x <- nleqslv(0, fun)
xstart <- matrix(runif(50, min=-0.3, max=0.3),ncol=2)
xstart
?runif
opt_x <- searchZeros(xstart, fun,  method="Broyden",global="dbldog")
??searchZeros
library("nleqslv")
opt_x <- searchZeros(xstart, fun,  method="Broyden",global="dbldog")
opt_y
opt_x
# check
dat <- data.frame(emission = 2800, t = 0:32, reduction = 2800*0.016)
for(i in 2:33){
dat$reduction[i] <- dat$reduction[i-1]-log(dat$t[i])*opt_x[[1]][1] - opt_x[[1]][2]
}
dat$emission = dat$emission- cumsum(dat$reduction)
plot(dat$emission)
dat
library(pdftools)
pdf_combine(c("../daniel/Schreibtisch/Bewerbungsunterlagen/Arbeitsvertrag_Annette.pdf", "Schreibtisch/Bewerbungsunterlagen/scan.pdf"), output = "Arbeitsvertrag_Abraham.pdf")
pdf_combine(c("../daniel/Schreibtisch/Bewerbungsunterlagen/Arbeitsvertrag_Annette.pdf", "Schreibtisch/Bewerbungsunterlagen/scan.pdf"), output = "Arbeitsvertrag_Abraham.pdf")
shiny::runApp('Schreibtisch/Projekte/sbti')
runApp('Schreibtisch/Projekte/sbti')
shiny::runApp('Schreibtisch/Projekte/sbti')
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
